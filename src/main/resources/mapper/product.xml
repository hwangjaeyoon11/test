<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mbc.day03.domain.ProductDao">
    <select id="getList" resultType="map">
        select pno, pname, kind, price,
        DATE_FORMAT(in_date, '%Y-%m-%d') as in_date,
        DATE_FORMAT(up_date, '%Y-%m-%d') as up_date
        from boot_product
    </select>
    <!--
    DATE_FORMAT(in_date, '%Y-%m-%d') as in_date
    : in_date 컬럼의 날짜를 YYYY-MM-DD 형식으로 변환하여
      in_date라는 별칭(alias)으로 반환
    -->
    <insert id="prodInsert">
        insert into boot_product(pname, kind, price)
        values(#{pname}, #{kind}, #{price})
    </insert>
    <!--
        maysql cast(데이터 as 타입) 형변환 함수
        char : 정수 => 문자
        date : 문자, 정수 => date로 형변환
        signed : 문자 => 정수(음수, 양수 구분)
        unsigned : 문자 => 양수

        select cast('20231022' as date) as 날짜;
        select cast('20231022' as signed) as 정수;
    -->
    <delete id="prodDel">
        delete from boot_product
        where pno = CAST(#{pno} AS SIGNED)
    </delete>

    <select id="getListOne" resultType="map">
        select pno, pname, kind, price,
        DATE_FORMAT(in_date, '%Y-%m-%d') as in_date,
        DATE_FORMAT(up_date, '%Y-%m-%d') as up_date
        from boot_product
        where pno = CAST(#{pno} AS SIGNED)
    </select>
    <update id="prodModify">
        update boot_product
        set
        pname= #{pname},
        kind= #{kind},
        price= CAST(#{price} AS SIGNED)
        where pno = CAST(#{pno} AS SIGNED)
    </update>
    <!-- 선택 삭제 -->
    <delete id="prodsDelete">
        delete from boot_product
        <!--    where pno in (1, 3) -->
        <where>
            <foreach collection="chkList" item="item" open="pno in (" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </delete>

    <!--    상품 가격 한번에 선택 수정하기 -->
    <update id="modifyPriceOne">
        update boot_product
        set price = CAST(#{price} AS SIGNED)
        <!--    where pno in (1, 3) -->
        <where>
            <foreach collection="chkList" item="item" open="pno in (" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>

    <!--    상품 검색 -->
    <select id="prodSearch" resultType="map">
        select pno, pname, kind, price,
        DATE_FORMAT(in_date, '%Y-%m-%d') as in_date,
        DATE_FORMAT(up_date, '%Y-%m-%d') as up_date
        from boot_product
        <!-- 동적쿼리 -->
        where 1 = 1
        <if test="pname != 'all'">
            and pname like CONCAT(#{pname}, '%') <!--like 스%, concat(): 문자열 합침함수-->
        </if>
        <if test="kind != 'all'">
            and kind = #{kind}
        </if>
    </select>

    <!--
    한번 접속으로 3개 데이터를 등록
    insert into product_log(pno, price)
    values
    (5, 3333),
    (6, 2222),
    (7, 1212)
    -->
    <insert id="insertLogOne">
        insert into product_log (pno, price)
        values
        <foreach collection="chkList" item="item" separator=",">
            (#{item.pno}, #{item.price})
        </foreach>
    </insert>

    <insert id="insertLog">
        insert into product_log(pno, price)
        values(#{pno}, CAST(#{price} AS SIGNED))
    </insert>

    <!--    상품가격 선택 수정-->
    <update id="modifyPrice">
        update product
        set price = CAST(#{price} AS SIGNED)
        where pno = CAST(#{pno} AS SIGNED)
    </update>

</mapper>